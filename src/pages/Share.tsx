import { ArrowLeft, Copy, Link2 } from "lucide-react";
import { useNavigate } from "react-router-dom";
import { motion } from "framer-motion";
import { useState } from "react";
import { useTranslation } from "react-i18next";
import { useToast } from "@/components/ui/use-toast";

const Share = () => {
  const navigate = useNavigate();
  const { toast } = useToast();
  const { t } = useTranslation(); // Get translation function
  const [link] = useState("https://casino-app.com/ref/user123");

  const copyToClipboard = () => {
    navigator.clipboard.writeText(link);
    toast({
      title: t("linkCopiedTitleSharePage"),
      description: t("linkCopiedDescSharePage"),
    });
  };

  const shareOptions = [
    {
      name: t("facebook"),
      color: "#1877F2",
      icon: (
        <svg
          className="w-6 h-6"
          viewBox="0 0 24 25"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M12 2.53906C17.5229 2.53906 22 7.01621 22 12.5391C22 17.5304 18.3431 21.6674 13.5625 22.4176V15.4297H15.8926L16.3359 12.5391L13.5625 12.5387V10.6632C13.5625 10.657 13.5625 10.6509 13.5626 10.6447C13.5626 10.6354 13.5628 10.6262 13.5629 10.6169C13.578 9.84259 13.9742 9.10156 15.1921 9.10156H16.4531V6.64062C16.4531 6.64062 15.3087 6.44492 14.2146 6.44492C11.966 6.44492 10.4842 7.78652 10.4386 10.2193C10.4379 10.2578 10.4375 10.2965 10.4375 10.3355V12.5387H7.89844V15.4293L10.4375 15.4297V22.4172C5.65686 21.667 2 17.5304 2 12.5391C2 7.01621 6.47715 2.53906 12 2.53906Z"
            fill="currentColor"
          />
        </svg>
      ),
    },
    {
      name: t("tiktok"),
      color: "#040404",
      icon: (
        <svg
          className="w-6 h-6"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M12.4381 2.01667C13.5298 2 14.6131 2.00833 15.6964 2C15.7631 3.27498 16.2214 4.57497 17.1548 5.47496C18.0881 6.39995 19.4047 6.82494 20.688 6.9666V10.3249C19.488 10.2832 18.2797 10.0332 17.1881 9.51656C16.7131 9.29991 16.2714 9.02491 15.8381 8.74157C15.8298 11.1749 15.8464 13.6082 15.8214 16.0332C15.7548 17.1998 15.3714 18.3581 14.6964 19.3164C13.6048 20.9164 11.7131 21.9581 9.7715 21.9914C8.57986 22.0581 7.38819 21.7331 6.37154 21.1331C4.68823 20.1414 3.50492 18.3248 3.32992 16.3748C3.31325 15.9582 3.30492 15.5415 3.32158 15.1332C3.47158 13.5499 4.25491 12.0332 5.47156 10.9999C6.85488 9.7999 8.78817 9.22491 10.5965 9.56656C10.6131 10.7999 10.5631 12.0332 10.5631 13.2665C9.73816 12.9999 8.77151 13.0749 8.04652 13.5749C7.52153 13.9165 7.12154 14.4415 6.91319 15.0332C6.7382 15.4582 6.7882 15.9248 6.79654 16.3748C6.99654 17.7415 8.31318 18.8914 9.71316 18.7665C10.6465 18.7581 11.5381 18.2165 12.0215 17.4248C12.1798 17.1498 12.3548 16.8665 12.3631 16.5415C12.4465 15.0498 12.4131 13.5665 12.4215 12.0749C12.4298 8.71657 12.4131 5.36661 12.4381 2.01667Z"
            fill="currentColor"
          />
        </svg>
      ),
    },

    {
      name: t("viber"),
      color: "#7360f2",
      icon: (
        <svg
          className="w-6 h-6"
          viewBox="0 0 52 52"
          version="1.1"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            id="Icons"
            stroke="none"
            stroke-width="1"
            fill="none"
            fill-rule="evenodd"
          >
            <g
              id="Color-"
              transform="translate(-598.000000, -758.000000)"
              fill="#ffffff"
            >
              <path
                d="M624,810 C638.359403,810 650,798.359403 650,784 C650,769.640597 638.359403,758 624,758 C609.640597,758 598,769.640597 598,784 C598,798.359403 609.640597,810 624,810 Z M625.557163,799.409207 C627.325063,799.188564 628.753733,798.762672 630.321233,797.998094 C631.862939,797.243741 632.849644,796.530492 634.155019,795.232271 C635.37816,794.005859 636.056551,793.077041 636.776002,791.635145 C637.778174,789.623608 638.348632,787.232396 638.446219,784.599993 C638.482254,783.702032 638.456556,783.50185 638.25094,783.245321 C637.86039,782.747507 637.002091,782.829703 636.709224,783.388976 C636.616662,783.573725 636.590964,783.732729 636.560135,784.451177 C636.508729,785.554433 636.431719,786.267682 636.27751,787.119522 C635.671103,790.460024 634.067654,793.128369 631.508319,795.042409 C629.375578,796.643375 627.170843,797.423387 624.282692,797.592702 C623.306228,797.649143 623.136647,797.685029 622.915679,797.854391 C622.504456,798.177682 622.483974,798.9371 622.879644,799.291164 C623.121199,799.511855 623.290771,799.542627 624.128492,799.516968 C624.565327,799.501582 625.207683,799.450263 625.557163,799.409207 L625.557163,799.409207 Z M613.809012,798.854999 C613.98892,798.793445 614.266425,798.649789 614.425756,798.547142 C615.402134,797.900559 618.120799,794.426647 619.009917,792.692195 C619.518641,791.70186 619.688213,790.968064 619.528978,790.424129 C619.364432,789.839149 619.092143,789.531244 617.874123,788.551135 C617.385891,788.156063 616.928478,787.750671 616.856589,787.642901 C616.67156,787.376051 616.522471,786.852663 616.522471,786.483204 C616.527687,785.626251 617.082688,784.071435 617.812475,782.875805 C618.377717,781.947024 619.39013,780.756602 620.392302,779.84316 C621.569167,778.765517 622.607278,778.031815 623.779022,777.4519 C625.284788,776.702756 626.204735,776.512894 626.877996,776.825864 C627.047567,776.902853 627.227389,777.0055 627.284002,777.051621 C627.335313,777.097836 627.731079,777.580217 628.162784,778.113821 C628.995289,779.160683 629.185438,779.329998 629.755896,779.524982 C630.480563,779.771285 631.220592,779.704618 631.965742,779.324885 C632.531079,779.032366 633.76447,778.267798 634.561026,777.713628 C635.609379,776.979831 637.850063,775.153043 638.153362,774.788658 C638.687784,774.13185 638.780346,773.290379 638.42053,772.361503 C638.040222,771.381489 636.560154,769.54439 635.527163,768.759265 C634.591855,768.051128 633.92893,767.779251 633.05526,767.738158 C632.335809,767.702263 632.037726,767.763817 631.117779,768.14355 C623.902394,771.11464 618.141368,775.548114 613.567447,781.639157 C611.177779,784.820617 609.358473,788.120102 608.114745,791.542752 C607.390173,793.538846 607.354224,794.406072 607.950294,795.427217 C608.207307,795.858231 609.301946,796.925592 610.098502,797.520807 C611.424455,798.506067 612.035983,798.870414 612.524215,798.973014 C612.858247,799.04487 613.438945,798.988429 613.809012,798.854999 L613.809012,798.854999 Z M625.911773,795.688935 C629.031324,795.232271 631.446691,793.785177 633.029562,791.43501 C633.91868,790.111111 634.47368,788.556295 634.663839,786.888605 C634.730607,786.277956 634.730607,785.164427 634.658718,784.979678 C634.591855,784.80525 634.376007,784.569173 634.190969,784.471724 C633.990569,784.369076 633.564079,784.379302 633.327644,784.502496 C632.931879,784.702593 632.813714,785.020771 632.813714,785.882837 C632.813714,787.211849 632.469355,788.612736 631.873285,789.700606 C631.194894,790.942404 630.208198,791.968672 629.005635,792.681969 C627.972644,793.297732 626.4463,793.754405 625.053579,793.867278 C624.549889,793.908372 624.272384,794.010981 624.082235,794.231625 C623.789368,794.56519 623.758454,795.01675 624.00513,795.391313 C624.272375,795.806969 624.683502,795.873684 625.911773,795.688935 L625.911773,795.688935 Z M627.006411,791.814743 C628.018825,791.599213 628.794898,791.214367 629.457823,790.593454 C630.310906,789.787877 630.778646,788.812881 630.984157,787.411993 C631.122909,786.498599 631.066382,786.139423 630.742601,785.841791 C630.439407,785.564706 629.879286,785.554433 629.540048,785.816132 C629.293372,786.00088 629.216267,786.195864 629.15974,786.724365 C629.092972,787.427389 628.969591,787.919995 628.758949,788.376716 C628.306657,789.346542 627.510101,789.849431 626.163665,790.013633 C625.531464,790.090622 625.341315,790.162449 625.135794,790.403592 C624.760607,790.850039 624.90448,791.573563 625.423541,791.840412 C625.618906,791.9379 625.701131,791.948173 626.132751,791.922513 C626.400005,791.907118 626.79577,791.860949 627.006411,791.814743 L627.006411,791.814743 Z"
                id="Viber"
                transform="translate(624.000000, 784.000000) scale(1, -1) translate(-624.000000, -784.000000) "
              ></path>
            </g>
          </g>
        </svg>
      ),
    },
    {
      name: t("telegram"),
      color: "#229ED9",
      icon: (
        <svg
          className="w-6 h-6"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M21.936 5.17077L18.9059 19.3546C18.6802 20.3539 18.1 20.5795 17.2618 20.1282L12.7166 16.7757L10.4923 18.9033C10.2666 19.1289 10.041 19.3546 9.5252 19.3546L9.8798 14.6804L18.3578 6.97598C18.7124 6.62138 18.2611 6.49244 17.8098 6.78256L7.26869 13.4232L2.72343 12.037C1.72412 11.7147 1.72412 11.0377 2.94908 10.5864L20.6144 3.72015C21.4847 3.46227 22.2262 3.91357 21.936 5.17077Z"
            fill="currentColor"
          />
        </svg>
      ),
    },
    {
      name: t("messenger"),
      color: "#0099FF",
      icon: (
        <svg
          className="w-6 h-6"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M11.9677 2.02539C6.35484 2.02539 2 6.15442 2 11.7028C2 14.6383 3.19355 17.1544 5.12903 18.8641C5.25806 18.9931 5.35484 19.2189 5.3871 19.4125L5.41935 21.1867C5.45161 21.7351 6 22.1544 6.54839 21.8964L8.54839 21.0254C8.67742 20.9931 8.90323 20.9286 9.09677 20.9931C10 21.2189 10.9677 21.4125 12 21.4125C17.6452 21.3802 22 17.2512 22 11.7351C22 6.21894 17.6129 2.02539 11.9677 2.02539ZM17.9677 9.477L15.0323 14.0899C14.5806 14.7996 13.5806 15.0576 12.9032 14.5093L10.5806 12.7351C10.3548 12.606 10.0968 12.606 9.87097 12.7351L6.70968 15.0899C6.29032 15.4125 5.74194 14.8964 6.03226 14.4447L8.96774 9.83184C9.41936 9.12216 10.4194 8.8641 11.0968 9.41248L13.4194 11.1867C13.6452 11.3157 13.9032 11.3157 14.129 11.1867L17.2581 8.76732C17.7419 8.57377 18.2258 9.05765 17.9677 9.477Z"
            fill="currentColor"
          />
        </svg>
      ),
    },
  ];

  return (
    <div className="h-screen overflow-y-scroll pb-28 pt-28 px-6">
      <motion.div
        initial={{ opacity: 0, x: -20 }}
        animate={{ opacity: 1, x: 0 }}
        className="flex items-center mb-8 absolute top-6 left-6"
      >
        <button
          onClick={() => navigate("/")}
          className="flex items-center gap-2 text-casino-silver hover:text-white transition-colors"
        >
          <ArrowLeft className="w-5 h-5" />
          <span>{t("back")}</span>
        </button>
      </motion.div>

      <motion.h1
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-3xl font-bold text-center text-white mb-8"
      >
        {t("share_earn")}
      </motion.h1>

      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.2 }}
        className="max-w-md mx-auto glass-effect p-6 rounded-xl"
      >
        <div className="text-center mb-8">
          <div className="w-20 h-20 rounded-full bg-casino-deep-blue flex items-center justify-center mx-auto mb-4">
            <Link2 className="w-10 h-10 text-casino-gold" />
          </div>
          <h2 className="text-xl font-semibold text-white">
            {t("card_title")}
          </h2>
          <p className="text-casino-silver mt-2">{t("card_sub_title")}</p>
        </div>

        <div className="mb-8">
          <div className="flex items-center gap-2 bg-casino-deep-blue border border-casino-light-blue rounded-lg p-4 mb-4">
            <input
              type="text"
              value={link}
              readOnly
              className="bg-transparent text-white flex-1 outline-none"
            />
            <button
              onClick={copyToClipboard}
              className="bg-casino-light-blue text-white p-2 rounded-lg hover:bg-opacity-80 transition-all"
            >
              <Copy className="w-5 h-5" />
            </button>
          </div>

          <div className="flex flex-wrap gap-3 justify-center">
            {shareOptions.map((option) => (
              <button
                key={option.name}
                className="glass-effect p-3 rounded-lg hover:scale-105 transition-all"
                style={{ backgroundColor: `${option.color}40` }}
              >
                <div className="text-white flex flex-col items-center w-11">
                  {option.icon}
                  <span className="text-xs mt-2">{option.name}</span>
                </div>
              </button>
            ))}
          </div>
        </div>

        <div className="bg-casino-deep-blue p-4 rounded-lg border border-casino-light-blue">
          <h3 className="text-white font-medium mb-2">{t("referal_status")}</h3>
          <div className="flex justify-between text-casino-silver mb-2">
            <span>{t("total_referals")}</span>
            <span className="text-white">12</span>
          </div>
          <div className="flex justify-between text-casino-silver mb-2">
            <span>{t("active_users")}</span>
            <span className="text-white">8</span>
          </div>
          <div className="flex justify-between text-casino-silver">
            <span>{t("total_earnings")}</span>
            <span className="text-casino-gold">$250.00</span>
          </div>
        </div>
      </motion.div>
    </div>
  );
};

export default Share;
